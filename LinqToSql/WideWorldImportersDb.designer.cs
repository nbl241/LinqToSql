#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqToSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WideWorldImporters")]
	public partial class WideWorldImportersDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertPeople(People instance);
    partial void UpdatePeople(People instance);
    partial void DeletePeople(People instance);
    partial void InsertCustomerCategories(CustomerCategories instance);
    partial void UpdateCustomerCategories(CustomerCategories instance);
    partial void DeleteCustomerCategories(CustomerCategories instance);
    partial void InsertInvoices(Invoices instance);
    partial void UpdateInvoices(Invoices instance);
    partial void DeleteInvoices(Invoices instance);
    partial void InsertInvoiceLines(InvoiceLines instance);
    partial void UpdateInvoiceLines(InvoiceLines instance);
    partial void DeleteInvoiceLines(InvoiceLines instance);
    partial void InsertOrderLines(OrderLines instance);
    partial void UpdateOrderLines(OrderLines instance);
    partial void DeleteOrderLines(OrderLines instance);
    partial void InsertOrders(Order instance);
    partial void UpdateOrders(Order instance);
    partial void DeleteOrders(Order instance);
    #endregion
		
		public WideWorldImportersDbDataContext() : 
				base(global::LinqToSql.Properties.Settings.Default.WideWorldImportersConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WideWorldImportersDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WideWorldImportersDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WideWorldImportersDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WideWorldImportersDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<People> People
		{
			get
			{
				return this.GetTable<People>();
			}
		}
		
		public System.Data.Linq.Table<CustomerCategories> CustomerCategories
		{
			get
			{
				return this.GetTable<CustomerCategories>();
			}
		}
		
		public System.Data.Linq.Table<Invoices> Invoices
		{
			get
			{
				return this.GetTable<Invoices>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceLines> InvoiceLines
		{
			get
			{
				return this.GetTable<InvoiceLines>();
			}
		}
		
		public System.Data.Linq.Table<OrderLines> OrderLines
		{
			get
			{
				return this.GetTable<OrderLines>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<NewCustomers> NewCustomers
		{
			get
			{
				return this.GetTable<NewCustomers>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Application.People")]
	public partial class People : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonID;
		
		private string _FullName;
		
		private string _PreferredName;
		
		private string _SearchName;
		
		private bool _IsPermittedToLogon;
		
		private string _LogonName;
		
		private bool _IsExternalLogonProvider;
		
		private System.Data.Linq.Binary _HashedPassword;
		
		private bool _IsSystemUser;
		
		private bool _IsEmployee;
		
		private bool _IsSalesperson;
		
		private string _UserPreferences;
		
		private string _PhoneNumber;
		
		private string _FaxNumber;
		
		private string _EmailAddress;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _CustomFields;
		
		private string _OtherLanguages;
		
		private int _LastEditedBy;
		
		private System.DateTime _ValidFrom;
		
		private System.DateTime _ValidTo;
		
		private EntitySet<People> _People2;
		
		private EntitySet<CustomerCategories> _CustomerCategories;
		
		private EntitySet<Invoices> _Invoices;
		
		private EntitySet<Invoices> _Invoices1;
		
		private EntitySet<Invoices> _Invoices2;
		
		private EntitySet<Invoices> _Invoices3;
		
		private EntitySet<Invoices> _Invoices4;
		
		private EntitySet<InvoiceLines> _InvoiceLines;
		
		private EntitySet<OrderLines> _OrderLines;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Order> _Orders1;
		
		private EntitySet<Order> _Orders2;
		
		private EntitySet<Order> _Orders3;
		
		private EntityRef<People> _People1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIDChanging(int value);
    partial void OnPersonIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnPreferredNameChanging(string value);
    partial void OnPreferredNameChanged();
    partial void OnSearchNameChanging(string value);
    partial void OnSearchNameChanged();
    partial void OnIsPermittedToLogonChanging(bool value);
    partial void OnIsPermittedToLogonChanged();
    partial void OnLogonNameChanging(string value);
    partial void OnLogonNameChanged();
    partial void OnIsExternalLogonProviderChanging(bool value);
    partial void OnIsExternalLogonProviderChanged();
    partial void OnHashedPasswordChanging(System.Data.Linq.Binary value);
    partial void OnHashedPasswordChanged();
    partial void OnIsSystemUserChanging(bool value);
    partial void OnIsSystemUserChanged();
    partial void OnIsEmployeeChanging(bool value);
    partial void OnIsEmployeeChanged();
    partial void OnIsSalespersonChanging(bool value);
    partial void OnIsSalespersonChanged();
    partial void OnUserPreferencesChanging(string value);
    partial void OnUserPreferencesChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnCustomFieldsChanging(string value);
    partial void OnCustomFieldsChanged();
    partial void OnOtherLanguagesChanging(string value);
    partial void OnOtherLanguagesChanged();
    partial void OnLastEditedByChanging(int value);
    partial void OnLastEditedByChanged();
    partial void OnValidFromChanging(System.DateTime value);
    partial void OnValidFromChanged();
    partial void OnValidToChanging(System.DateTime value);
    partial void OnValidToChanged();
    #endregion
		
		public People()
		{
			this._People2 = new EntitySet<People>(new Action<People>(this.attach_People2), new Action<People>(this.detach_People2));
			this._CustomerCategories = new EntitySet<CustomerCategories>(new Action<CustomerCategories>(this.attach_CustomerCategories), new Action<CustomerCategories>(this.detach_CustomerCategories));
			this._Invoices = new EntitySet<Invoices>(new Action<Invoices>(this.attach_Invoices), new Action<Invoices>(this.detach_Invoices));
			this._Invoices1 = new EntitySet<Invoices>(new Action<Invoices>(this.attach_Invoices1), new Action<Invoices>(this.detach_Invoices1));
			this._Invoices2 = new EntitySet<Invoices>(new Action<Invoices>(this.attach_Invoices2), new Action<Invoices>(this.detach_Invoices2));
			this._Invoices3 = new EntitySet<Invoices>(new Action<Invoices>(this.attach_Invoices3), new Action<Invoices>(this.detach_Invoices3));
			this._Invoices4 = new EntitySet<Invoices>(new Action<Invoices>(this.attach_Invoices4), new Action<Invoices>(this.detach_Invoices4));
			this._InvoiceLines = new EntitySet<InvoiceLines>(new Action<InvoiceLines>(this.attach_InvoiceLines), new Action<InvoiceLines>(this.detach_InvoiceLines));
			this._OrderLines = new EntitySet<OrderLines>(new Action<OrderLines>(this.attach_OrderLines), new Action<OrderLines>(this.detach_OrderLines));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Orders1 = new EntitySet<Order>(new Action<Order>(this.attach_Orders1), new Action<Order>(this.detach_Orders1));
			this._Orders2 = new EntitySet<Order>(new Action<Order>(this.attach_Orders2), new Action<Order>(this.detach_Orders2));
			this._Orders3 = new EntitySet<Order>(new Action<Order>(this.attach_Orders3), new Action<Order>(this.detach_Orders3));
			this._People1 = default(EntityRef<People>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PreferredName
		{
			get
			{
				return this._PreferredName;
			}
			set
			{
				if ((this._PreferredName != value))
				{
					this.OnPreferredNameChanging(value);
					this.SendPropertyChanging();
					this._PreferredName = value;
					this.SendPropertyChanged("PreferredName");
					this.OnPreferredNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchName", AutoSync=AutoSync.Always, DbType="NVarChar(101) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string SearchName
		{
			get
			{
				return this._SearchName;
			}
			set
			{
				if ((this._SearchName != value))
				{
					this.OnSearchNameChanging(value);
					this.SendPropertyChanging();
					this._SearchName = value;
					this.SendPropertyChanged("SearchName");
					this.OnSearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPermittedToLogon", DbType="Bit NOT NULL")]
		public bool IsPermittedToLogon
		{
			get
			{
				return this._IsPermittedToLogon;
			}
			set
			{
				if ((this._IsPermittedToLogon != value))
				{
					this.OnIsPermittedToLogonChanging(value);
					this.SendPropertyChanging();
					this._IsPermittedToLogon = value;
					this.SendPropertyChanged("IsPermittedToLogon");
					this.OnIsPermittedToLogonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogonName", DbType="NVarChar(50)")]
		public string LogonName
		{
			get
			{
				return this._LogonName;
			}
			set
			{
				if ((this._LogonName != value))
				{
					this.OnLogonNameChanging(value);
					this.SendPropertyChanging();
					this._LogonName = value;
					this.SendPropertyChanged("LogonName");
					this.OnLogonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExternalLogonProvider", DbType="Bit NOT NULL")]
		public bool IsExternalLogonProvider
		{
			get
			{
				return this._IsExternalLogonProvider;
			}
			set
			{
				if ((this._IsExternalLogonProvider != value))
				{
					this.OnIsExternalLogonProviderChanging(value);
					this.SendPropertyChanging();
					this._IsExternalLogonProvider = value;
					this.SendPropertyChanged("IsExternalLogonProvider");
					this.OnIsExternalLogonProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HashedPassword", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary HashedPassword
		{
			get
			{
				return this._HashedPassword;
			}
			set
			{
				if ((this._HashedPassword != value))
				{
					this.OnHashedPasswordChanging(value);
					this.SendPropertyChanging();
					this._HashedPassword = value;
					this.SendPropertyChanged("HashedPassword");
					this.OnHashedPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystemUser", DbType="Bit NOT NULL")]
		public bool IsSystemUser
		{
			get
			{
				return this._IsSystemUser;
			}
			set
			{
				if ((this._IsSystemUser != value))
				{
					this.OnIsSystemUserChanging(value);
					this.SendPropertyChanging();
					this._IsSystemUser = value;
					this.SendPropertyChanged("IsSystemUser");
					this.OnIsSystemUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEmployee", DbType="Bit NOT NULL")]
		public bool IsEmployee
		{
			get
			{
				return this._IsEmployee;
			}
			set
			{
				if ((this._IsEmployee != value))
				{
					this.OnIsEmployeeChanging(value);
					this.SendPropertyChanging();
					this._IsEmployee = value;
					this.SendPropertyChanged("IsEmployee");
					this.OnIsEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSalesperson", DbType="Bit NOT NULL")]
		public bool IsSalesperson
		{
			get
			{
				return this._IsSalesperson;
			}
			set
			{
				if ((this._IsSalesperson != value))
				{
					this.OnIsSalespersonChanging(value);
					this.SendPropertyChanging();
					this._IsSalesperson = value;
					this.SendPropertyChanged("IsSalesperson");
					this.OnIsSalespersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPreferences", DbType="NVarChar(MAX)")]
		public string UserPreferences
		{
			get
			{
				return this._UserPreferences;
			}
			set
			{
				if ((this._UserPreferences != value))
				{
					this.OnUserPreferencesChanging(value);
					this.SendPropertyChanging();
					this._UserPreferences = value;
					this.SendPropertyChanged("UserPreferences");
					this.OnUserPreferencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(20)")]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(256)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomFields", DbType="NVarChar(MAX)")]
		public string CustomFields
		{
			get
			{
				return this._CustomFields;
			}
			set
			{
				if ((this._CustomFields != value))
				{
					this.OnCustomFieldsChanging(value);
					this.SendPropertyChanging();
					this._CustomFields = value;
					this.SendPropertyChanged("CustomFields");
					this.OnCustomFieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherLanguages", AutoSync=AutoSync.Always, DbType="NVarChar(MAX)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string OtherLanguages
		{
			get
			{
				return this._OtherLanguages;
			}
			set
			{
				if ((this._OtherLanguages != value))
				{
					this.OnOtherLanguagesChanging(value);
					this.SendPropertyChanging();
					this._OtherLanguages = value;
					this.SendPropertyChanged("OtherLanguages");
					this.OnOtherLanguagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedBy", DbType="Int NOT NULL")]
		public int LastEditedBy
		{
			get
			{
				return this._LastEditedBy;
			}
			set
			{
				if ((this._LastEditedBy != value))
				{
					if (this._People1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastEditedByChanging(value);
					this.SendPropertyChanging();
					this._LastEditedBy = value;
					this.SendPropertyChanged("LastEditedBy");
					this.OnLastEditedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidFrom", DbType="DateTime2 NOT NULL")]
		public System.DateTime ValidFrom
		{
			get
			{
				return this._ValidFrom;
			}
			set
			{
				if ((this._ValidFrom != value))
				{
					this.OnValidFromChanging(value);
					this.SendPropertyChanging();
					this._ValidFrom = value;
					this.SendPropertyChanged("ValidFrom");
					this.OnValidFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidTo", DbType="DateTime2 NOT NULL")]
		public System.DateTime ValidTo
		{
			get
			{
				return this._ValidTo;
			}
			set
			{
				if ((this._ValidTo != value))
				{
					this.OnValidToChanging(value);
					this.SendPropertyChanging();
					this._ValidTo = value;
					this.SendPropertyChanged("ValidTo");
					this.OnValidToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_People", Storage="_People2", ThisKey="PersonID", OtherKey="LastEditedBy")]
		public EntitySet<People> People2
		{
			get
			{
				return this._People2;
			}
			set
			{
				this._People2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_CustomerCategories", Storage="_CustomerCategories", ThisKey="PersonID", OtherKey="LastEditedBy")]
		public EntitySet<CustomerCategories> CustomerCategories
		{
			get
			{
				return this._CustomerCategories;
			}
			set
			{
				this._CustomerCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Invoices", Storage="_Invoices", ThisKey="PersonID", OtherKey="AccountsPersonID")]
		public EntitySet<Invoices> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Invoices1", Storage="_Invoices1", ThisKey="PersonID", OtherKey="LastEditedBy")]
		public EntitySet<Invoices> Invoices1
		{
			get
			{
				return this._Invoices1;
			}
			set
			{
				this._Invoices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Invoices2", Storage="_Invoices2", ThisKey="PersonID", OtherKey="ContactPersonID")]
		public EntitySet<Invoices> Invoices2
		{
			get
			{
				return this._Invoices2;
			}
			set
			{
				this._Invoices2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Invoices3", Storage="_Invoices3", ThisKey="PersonID", OtherKey="PackedByPersonID")]
		public EntitySet<Invoices> Invoices3
		{
			get
			{
				return this._Invoices3;
			}
			set
			{
				this._Invoices3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Invoices4", Storage="_Invoices4", ThisKey="PersonID", OtherKey="SalespersonPersonID")]
		public EntitySet<Invoices> Invoices4
		{
			get
			{
				return this._Invoices4;
			}
			set
			{
				this._Invoices4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_InvoiceLines", Storage="_InvoiceLines", ThisKey="PersonID", OtherKey="LastEditedBy")]
		public EntitySet<InvoiceLines> InvoiceLines
		{
			get
			{
				return this._InvoiceLines;
			}
			set
			{
				this._InvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_OrderLines", Storage="_OrderLines", ThisKey="PersonID", OtherKey="LastEditedBy")]
		public EntitySet<OrderLines> OrderLines
		{
			get
			{
				return this._OrderLines;
			}
			set
			{
				this._OrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Orders", Storage="_Orders", ThisKey="PersonID", OtherKey="LastEditedBy")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Orders1", Storage="_Orders1", ThisKey="PersonID", OtherKey="ContactPersonID")]
		public EntitySet<Order> Orders1
		{
			get
			{
				return this._Orders1;
			}
			set
			{
				this._Orders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Orders2", Storage="_Orders2", ThisKey="PersonID", OtherKey="PickedByPersonID")]
		public EntitySet<Order> Orders2
		{
			get
			{
				return this._Orders2;
			}
			set
			{
				this._Orders2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Orders3", Storage="_Orders3", ThisKey="PersonID", OtherKey="SalespersonPersonID")]
		public EntitySet<Order> Orders3
		{
			get
			{
				return this._Orders3;
			}
			set
			{
				this._Orders3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_People", Storage="_People1", ThisKey="LastEditedBy", OtherKey="PersonID", IsForeignKey=true)]
		public People People1
		{
			get
			{
				return this._People1.Entity;
			}
			set
			{
				People previousValue = this._People1.Entity;
				if (((previousValue != value) 
							|| (this._People1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People1.Entity = null;
						previousValue.People2.Remove(this);
					}
					this._People1.Entity = value;
					if ((value != null))
					{
						value.People2.Add(this);
						this._LastEditedBy = value.PersonID;
					}
					else
					{
						this._LastEditedBy = default(int);
					}
					this.SendPropertyChanged("People1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_People2(People entity)
		{
			this.SendPropertyChanging();
			entity.People1 = this;
		}
		
		private void detach_People2(People entity)
		{
			this.SendPropertyChanging();
			entity.People1 = null;
		}
		
		private void attach_CustomerCategories(CustomerCategories entity)
		{
			this.SendPropertyChanging();
			entity.People = this;
		}
		
		private void detach_CustomerCategories(CustomerCategories entity)
		{
			this.SendPropertyChanging();
			entity.People = null;
		}
		
		private void attach_Invoices(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.People = this;
		}
		
		private void detach_Invoices(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.People = null;
		}
		
		private void attach_Invoices1(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.People1 = this;
		}
		
		private void detach_Invoices1(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.People1 = null;
		}
		
		private void attach_Invoices2(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.People2 = this;
		}
		
		private void detach_Invoices2(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.People2 = null;
		}
		
		private void attach_Invoices3(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.People3 = this;
		}
		
		private void detach_Invoices3(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.People3 = null;
		}
		
		private void attach_Invoices4(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.People4 = this;
		}
		
		private void detach_Invoices4(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.People4 = null;
		}
		
		private void attach_InvoiceLines(InvoiceLines entity)
		{
			this.SendPropertyChanging();
			entity.People = this;
		}
		
		private void detach_InvoiceLines(InvoiceLines entity)
		{
			this.SendPropertyChanging();
			entity.People = null;
		}
		
		private void attach_OrderLines(OrderLines entity)
		{
			this.SendPropertyChanging();
			entity.People = this;
		}
		
		private void detach_OrderLines(OrderLines entity)
		{
			this.SendPropertyChanging();
			entity.People = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.People = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.People = null;
		}
		
		private void attach_Orders1(Order entity)
		{
			this.SendPropertyChanging();
			entity.People1 = this;
		}
		
		private void detach_Orders1(Order entity)
		{
			this.SendPropertyChanging();
			entity.People1 = null;
		}
		
		private void attach_Orders2(Order entity)
		{
			this.SendPropertyChanging();
			entity.People2 = this;
		}
		
		private void detach_Orders2(Order entity)
		{
			this.SendPropertyChanging();
			entity.People2 = null;
		}
		
		private void attach_Orders3(Order entity)
		{
			this.SendPropertyChanging();
			entity.People3 = this;
		}
		
		private void detach_Orders3(Order entity)
		{
			this.SendPropertyChanging();
			entity.People3 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.CustomerCategories")]
	public partial class CustomerCategories : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerCategoryID;
		
		private string _CustomerCategoryName;
		
		private int _LastEditedBy;
		
		private System.DateTime _ValidFrom;
		
		private System.DateTime _ValidTo;
		
		private EntityRef<People> _People;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerCategoryIDChanging(int value);
    partial void OnCustomerCategoryIDChanged();
    partial void OnCustomerCategoryNameChanging(string value);
    partial void OnCustomerCategoryNameChanged();
    partial void OnLastEditedByChanging(int value);
    partial void OnLastEditedByChanged();
    partial void OnValidFromChanging(System.DateTime value);
    partial void OnValidFromChanged();
    partial void OnValidToChanging(System.DateTime value);
    partial void OnValidToChanged();
    #endregion
		
		public CustomerCategories()
		{
			this._People = default(EntityRef<People>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerCategoryID
		{
			get
			{
				return this._CustomerCategoryID;
			}
			set
			{
				if ((this._CustomerCategoryID != value))
				{
					this.OnCustomerCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerCategoryID = value;
					this.SendPropertyChanged("CustomerCategoryID");
					this.OnCustomerCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCategoryName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerCategoryName
		{
			get
			{
				return this._CustomerCategoryName;
			}
			set
			{
				if ((this._CustomerCategoryName != value))
				{
					this.OnCustomerCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerCategoryName = value;
					this.SendPropertyChanged("CustomerCategoryName");
					this.OnCustomerCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedBy", DbType="Int NOT NULL")]
		public int LastEditedBy
		{
			get
			{
				return this._LastEditedBy;
			}
			set
			{
				if ((this._LastEditedBy != value))
				{
					if (this._People.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastEditedByChanging(value);
					this.SendPropertyChanging();
					this._LastEditedBy = value;
					this.SendPropertyChanged("LastEditedBy");
					this.OnLastEditedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidFrom", DbType="DateTime2 NOT NULL")]
		public System.DateTime ValidFrom
		{
			get
			{
				return this._ValidFrom;
			}
			set
			{
				if ((this._ValidFrom != value))
				{
					this.OnValidFromChanging(value);
					this.SendPropertyChanging();
					this._ValidFrom = value;
					this.SendPropertyChanged("ValidFrom");
					this.OnValidFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidTo", DbType="DateTime2 NOT NULL")]
		public System.DateTime ValidTo
		{
			get
			{
				return this._ValidTo;
			}
			set
			{
				if ((this._ValidTo != value))
				{
					this.OnValidToChanging(value);
					this.SendPropertyChanging();
					this._ValidTo = value;
					this.SendPropertyChanged("ValidTo");
					this.OnValidToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_CustomerCategories", Storage="_People", ThisKey="LastEditedBy", OtherKey="PersonID", IsForeignKey=true)]
		public People People
		{
			get
			{
				return this._People.Entity;
			}
			set
			{
				People previousValue = this._People.Entity;
				if (((previousValue != value) 
							|| (this._People.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People.Entity = null;
						previousValue.CustomerCategories.Remove(this);
					}
					this._People.Entity = value;
					if ((value != null))
					{
						value.CustomerCategories.Add(this);
						this._LastEditedBy = value.PersonID;
					}
					else
					{
						this._LastEditedBy = default(int);
					}
					this.SendPropertyChanged("People");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.Invoices")]
	public partial class Invoices : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private int _CustomerID;
		
		private int _BillToCustomerID;
		
		private System.Nullable<int> _OrderID;
		
		private int _DeliveryMethodID;
		
		private int _ContactPersonID;
		
		private int _AccountsPersonID;
		
		private int _SalespersonPersonID;
		
		private int _PackedByPersonID;
		
		private System.DateTime _InvoiceDate;
		
		private string _CustomerPurchaseOrderNumber;
		
		private bool _IsCreditNote;
		
		private string _CreditNoteReason;
		
		private string _Comments;
		
		private string _DeliveryInstructions;
		
		private string _InternalComments;
		
		private int _TotalDryItems;
		
		private int _TotalChillerItems;
		
		private string _DeliveryRun;
		
		private string _RunPosition;
		
		private string _ReturnedDeliveryData;
		
		private System.Nullable<System.DateTime> _ConfirmedDeliveryTime;
		
		private string _ConfirmedReceivedBy;
		
		private int _LastEditedBy;
		
		private System.DateTime _LastEditedWhen;
		
		private EntitySet<InvoiceLines> _InvoiceLines;
		
		private EntityRef<People> _People;
		
		private EntityRef<People> _People1;
		
		private EntityRef<People> _People2;
		
		private EntityRef<People> _People3;
		
		private EntityRef<People> _People4;
		
		private EntityRef<Order> _Orders;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnBillToCustomerIDChanging(int value);
    partial void OnBillToCustomerIDChanged();
    partial void OnOrderIDChanging(System.Nullable<int> value);
    partial void OnOrderIDChanged();
    partial void OnDeliveryMethodIDChanging(int value);
    partial void OnDeliveryMethodIDChanged();
    partial void OnContactPersonIDChanging(int value);
    partial void OnContactPersonIDChanged();
    partial void OnAccountsPersonIDChanging(int value);
    partial void OnAccountsPersonIDChanged();
    partial void OnSalespersonPersonIDChanging(int value);
    partial void OnSalespersonPersonIDChanged();
    partial void OnPackedByPersonIDChanging(int value);
    partial void OnPackedByPersonIDChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnCustomerPurchaseOrderNumberChanging(string value);
    partial void OnCustomerPurchaseOrderNumberChanged();
    partial void OnIsCreditNoteChanging(bool value);
    partial void OnIsCreditNoteChanged();
    partial void OnCreditNoteReasonChanging(string value);
    partial void OnCreditNoteReasonChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDeliveryInstructionsChanging(string value);
    partial void OnDeliveryInstructionsChanged();
    partial void OnInternalCommentsChanging(string value);
    partial void OnInternalCommentsChanged();
    partial void OnTotalDryItemsChanging(int value);
    partial void OnTotalDryItemsChanged();
    partial void OnTotalChillerItemsChanging(int value);
    partial void OnTotalChillerItemsChanged();
    partial void OnDeliveryRunChanging(string value);
    partial void OnDeliveryRunChanged();
    partial void OnRunPositionChanging(string value);
    partial void OnRunPositionChanged();
    partial void OnReturnedDeliveryDataChanging(string value);
    partial void OnReturnedDeliveryDataChanged();
    partial void OnConfirmedDeliveryTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnConfirmedDeliveryTimeChanged();
    partial void OnConfirmedReceivedByChanging(string value);
    partial void OnConfirmedReceivedByChanged();
    partial void OnLastEditedByChanging(int value);
    partial void OnLastEditedByChanged();
    partial void OnLastEditedWhenChanging(System.DateTime value);
    partial void OnLastEditedWhenChanged();
    #endregion
		
		public Invoices()
		{
			this._InvoiceLines = new EntitySet<InvoiceLines>(new Action<InvoiceLines>(this.attach_InvoiceLines), new Action<InvoiceLines>(this.detach_InvoiceLines));
			this._People = default(EntityRef<People>);
			this._People1 = default(EntityRef<People>);
			this._People2 = default(EntityRef<People>);
			this._People3 = default(EntityRef<People>);
			this._People4 = default(EntityRef<People>);
			this._Orders = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToCustomerID", DbType="Int NOT NULL")]
		public int BillToCustomerID
		{
			get
			{
				return this._BillToCustomerID;
			}
			set
			{
				if ((this._BillToCustomerID != value))
				{
					this.OnBillToCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._BillToCustomerID = value;
					this.SendPropertyChanged("BillToCustomerID");
					this.OnBillToCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryMethodID", DbType="Int NOT NULL")]
		public int DeliveryMethodID
		{
			get
			{
				return this._DeliveryMethodID;
			}
			set
			{
				if ((this._DeliveryMethodID != value))
				{
					this.OnDeliveryMethodIDChanging(value);
					this.SendPropertyChanging();
					this._DeliveryMethodID = value;
					this.SendPropertyChanged("DeliveryMethodID");
					this.OnDeliveryMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonID", DbType="Int NOT NULL")]
		public int ContactPersonID
		{
			get
			{
				return this._ContactPersonID;
			}
			set
			{
				if ((this._ContactPersonID != value))
				{
					if (this._People2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactPersonIDChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonID = value;
					this.SendPropertyChanged("ContactPersonID");
					this.OnContactPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountsPersonID", DbType="Int NOT NULL")]
		public int AccountsPersonID
		{
			get
			{
				return this._AccountsPersonID;
			}
			set
			{
				if ((this._AccountsPersonID != value))
				{
					if (this._People.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountsPersonIDChanging(value);
					this.SendPropertyChanging();
					this._AccountsPersonID = value;
					this.SendPropertyChanged("AccountsPersonID");
					this.OnAccountsPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalespersonPersonID", DbType="Int NOT NULL")]
		public int SalespersonPersonID
		{
			get
			{
				return this._SalespersonPersonID;
			}
			set
			{
				if ((this._SalespersonPersonID != value))
				{
					if (this._People4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalespersonPersonIDChanging(value);
					this.SendPropertyChanging();
					this._SalespersonPersonID = value;
					this.SendPropertyChanged("SalespersonPersonID");
					this.OnSalespersonPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackedByPersonID", DbType="Int NOT NULL")]
		public int PackedByPersonID
		{
			get
			{
				return this._PackedByPersonID;
			}
			set
			{
				if ((this._PackedByPersonID != value))
				{
					if (this._People3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackedByPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PackedByPersonID = value;
					this.SendPropertyChanged("PackedByPersonID");
					this.OnPackedByPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPurchaseOrderNumber", DbType="NVarChar(20)")]
		public string CustomerPurchaseOrderNumber
		{
			get
			{
				return this._CustomerPurchaseOrderNumber;
			}
			set
			{
				if ((this._CustomerPurchaseOrderNumber != value))
				{
					this.OnCustomerPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerPurchaseOrderNumber = value;
					this.SendPropertyChanged("CustomerPurchaseOrderNumber");
					this.OnCustomerPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCreditNote", DbType="Bit NOT NULL")]
		public bool IsCreditNote
		{
			get
			{
				return this._IsCreditNote;
			}
			set
			{
				if ((this._IsCreditNote != value))
				{
					this.OnIsCreditNoteChanging(value);
					this.SendPropertyChanging();
					this._IsCreditNote = value;
					this.SendPropertyChanged("IsCreditNote");
					this.OnIsCreditNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditNoteReason", DbType="NVarChar(MAX)")]
		public string CreditNoteReason
		{
			get
			{
				return this._CreditNoteReason;
			}
			set
			{
				if ((this._CreditNoteReason != value))
				{
					this.OnCreditNoteReasonChanging(value);
					this.SendPropertyChanging();
					this._CreditNoteReason = value;
					this.SendPropertyChanged("CreditNoteReason");
					this.OnCreditNoteReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryInstructions", DbType="NVarChar(MAX)")]
		public string DeliveryInstructions
		{
			get
			{
				return this._DeliveryInstructions;
			}
			set
			{
				if ((this._DeliveryInstructions != value))
				{
					this.OnDeliveryInstructionsChanging(value);
					this.SendPropertyChanging();
					this._DeliveryInstructions = value;
					this.SendPropertyChanged("DeliveryInstructions");
					this.OnDeliveryInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalComments", DbType="NVarChar(MAX)")]
		public string InternalComments
		{
			get
			{
				return this._InternalComments;
			}
			set
			{
				if ((this._InternalComments != value))
				{
					this.OnInternalCommentsChanging(value);
					this.SendPropertyChanging();
					this._InternalComments = value;
					this.SendPropertyChanged("InternalComments");
					this.OnInternalCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDryItems", DbType="Int NOT NULL")]
		public int TotalDryItems
		{
			get
			{
				return this._TotalDryItems;
			}
			set
			{
				if ((this._TotalDryItems != value))
				{
					this.OnTotalDryItemsChanging(value);
					this.SendPropertyChanging();
					this._TotalDryItems = value;
					this.SendPropertyChanged("TotalDryItems");
					this.OnTotalDryItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalChillerItems", DbType="Int NOT NULL")]
		public int TotalChillerItems
		{
			get
			{
				return this._TotalChillerItems;
			}
			set
			{
				if ((this._TotalChillerItems != value))
				{
					this.OnTotalChillerItemsChanging(value);
					this.SendPropertyChanging();
					this._TotalChillerItems = value;
					this.SendPropertyChanged("TotalChillerItems");
					this.OnTotalChillerItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryRun", DbType="NVarChar(5)")]
		public string DeliveryRun
		{
			get
			{
				return this._DeliveryRun;
			}
			set
			{
				if ((this._DeliveryRun != value))
				{
					this.OnDeliveryRunChanging(value);
					this.SendPropertyChanging();
					this._DeliveryRun = value;
					this.SendPropertyChanged("DeliveryRun");
					this.OnDeliveryRunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunPosition", DbType="NVarChar(5)")]
		public string RunPosition
		{
			get
			{
				return this._RunPosition;
			}
			set
			{
				if ((this._RunPosition != value))
				{
					this.OnRunPositionChanging(value);
					this.SendPropertyChanging();
					this._RunPosition = value;
					this.SendPropertyChanged("RunPosition");
					this.OnRunPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnedDeliveryData", DbType="NVarChar(MAX)")]
		public string ReturnedDeliveryData
		{
			get
			{
				return this._ReturnedDeliveryData;
			}
			set
			{
				if ((this._ReturnedDeliveryData != value))
				{
					this.OnReturnedDeliveryDataChanging(value);
					this.SendPropertyChanging();
					this._ReturnedDeliveryData = value;
					this.SendPropertyChanged("ReturnedDeliveryData");
					this.OnReturnedDeliveryDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmedDeliveryTime", AutoSync=AutoSync.Always, DbType="DateTime2", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ConfirmedDeliveryTime
		{
			get
			{
				return this._ConfirmedDeliveryTime;
			}
			set
			{
				if ((this._ConfirmedDeliveryTime != value))
				{
					this.OnConfirmedDeliveryTimeChanging(value);
					this.SendPropertyChanging();
					this._ConfirmedDeliveryTime = value;
					this.SendPropertyChanged("ConfirmedDeliveryTime");
					this.OnConfirmedDeliveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmedReceivedBy", AutoSync=AutoSync.Always, DbType="NVarChar(4000)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string ConfirmedReceivedBy
		{
			get
			{
				return this._ConfirmedReceivedBy;
			}
			set
			{
				if ((this._ConfirmedReceivedBy != value))
				{
					this.OnConfirmedReceivedByChanging(value);
					this.SendPropertyChanging();
					this._ConfirmedReceivedBy = value;
					this.SendPropertyChanged("ConfirmedReceivedBy");
					this.OnConfirmedReceivedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedBy", DbType="Int NOT NULL")]
		public int LastEditedBy
		{
			get
			{
				return this._LastEditedBy;
			}
			set
			{
				if ((this._LastEditedBy != value))
				{
					if (this._People1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastEditedByChanging(value);
					this.SendPropertyChanging();
					this._LastEditedBy = value;
					this.SendPropertyChanged("LastEditedBy");
					this.OnLastEditedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedWhen", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastEditedWhen
		{
			get
			{
				return this._LastEditedWhen;
			}
			set
			{
				if ((this._LastEditedWhen != value))
				{
					this.OnLastEditedWhenChanging(value);
					this.SendPropertyChanging();
					this._LastEditedWhen = value;
					this.SendPropertyChanged("LastEditedWhen");
					this.OnLastEditedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoices_InvoiceLines", Storage="_InvoiceLines", ThisKey="InvoiceID", OtherKey="InvoiceID")]
		public EntitySet<InvoiceLines> InvoiceLines
		{
			get
			{
				return this._InvoiceLines;
			}
			set
			{
				this._InvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Invoices", Storage="_People", ThisKey="AccountsPersonID", OtherKey="PersonID", IsForeignKey=true)]
		public People People
		{
			get
			{
				return this._People.Entity;
			}
			set
			{
				People previousValue = this._People.Entity;
				if (((previousValue != value) 
							|| (this._People.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._People.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._AccountsPersonID = value.PersonID;
					}
					else
					{
						this._AccountsPersonID = default(int);
					}
					this.SendPropertyChanged("People");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Invoices1", Storage="_People1", ThisKey="LastEditedBy", OtherKey="PersonID", IsForeignKey=true)]
		public People People1
		{
			get
			{
				return this._People1.Entity;
			}
			set
			{
				People previousValue = this._People1.Entity;
				if (((previousValue != value) 
							|| (this._People1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People1.Entity = null;
						previousValue.Invoices1.Remove(this);
					}
					this._People1.Entity = value;
					if ((value != null))
					{
						value.Invoices1.Add(this);
						this._LastEditedBy = value.PersonID;
					}
					else
					{
						this._LastEditedBy = default(int);
					}
					this.SendPropertyChanged("People1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Invoices2", Storage="_People2", ThisKey="ContactPersonID", OtherKey="PersonID", IsForeignKey=true)]
		public People People2
		{
			get
			{
				return this._People2.Entity;
			}
			set
			{
				People previousValue = this._People2.Entity;
				if (((previousValue != value) 
							|| (this._People2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People2.Entity = null;
						previousValue.Invoices2.Remove(this);
					}
					this._People2.Entity = value;
					if ((value != null))
					{
						value.Invoices2.Add(this);
						this._ContactPersonID = value.PersonID;
					}
					else
					{
						this._ContactPersonID = default(int);
					}
					this.SendPropertyChanged("People2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Invoices3", Storage="_People3", ThisKey="PackedByPersonID", OtherKey="PersonID", IsForeignKey=true)]
		public People People3
		{
			get
			{
				return this._People3.Entity;
			}
			set
			{
				People previousValue = this._People3.Entity;
				if (((previousValue != value) 
							|| (this._People3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People3.Entity = null;
						previousValue.Invoices3.Remove(this);
					}
					this._People3.Entity = value;
					if ((value != null))
					{
						value.Invoices3.Add(this);
						this._PackedByPersonID = value.PersonID;
					}
					else
					{
						this._PackedByPersonID = default(int);
					}
					this.SendPropertyChanged("People3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Invoices4", Storage="_People4", ThisKey="SalespersonPersonID", OtherKey="PersonID", IsForeignKey=true)]
		public People People4
		{
			get
			{
				return this._People4.Entity;
			}
			set
			{
				People previousValue = this._People4.Entity;
				if (((previousValue != value) 
							|| (this._People4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People4.Entity = null;
						previousValue.Invoices4.Remove(this);
					}
					this._People4.Entity = value;
					if ((value != null))
					{
						value.Invoices4.Add(this);
						this._SalespersonPersonID = value.PersonID;
					}
					else
					{
						this._SalespersonPersonID = default(int);
					}
					this.SendPropertyChanged("People4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_Invoices", Storage="_Orders", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public Order Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Order previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceLines(InvoiceLines entity)
		{
			this.SendPropertyChanging();
			entity.Invoices = this;
		}
		
		private void detach_InvoiceLines(InvoiceLines entity)
		{
			this.SendPropertyChanging();
			entity.Invoices = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.InvoiceLines")]
	public partial class InvoiceLines : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceLineID;
		
		private int _InvoiceID;
		
		private int _StockItemID;
		
		private string _Description;
		
		private int _PackageTypeID;
		
		private int _Quantity;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private decimal _TaxRate;
		
		private decimal _TaxAmount;
		
		private decimal _LineProfit;
		
		private decimal _ExtendedPrice;
		
		private int _LastEditedBy;
		
		private System.DateTime _LastEditedWhen;
		
		private EntityRef<People> _People;
		
		private EntityRef<Invoices> _Invoices;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceLineIDChanging(int value);
    partial void OnInvoiceLineIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnStockItemIDChanging(int value);
    partial void OnStockItemIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPackageTypeIDChanging(int value);
    partial void OnPackageTypeIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnTaxAmountChanging(decimal value);
    partial void OnTaxAmountChanged();
    partial void OnLineProfitChanging(decimal value);
    partial void OnLineProfitChanged();
    partial void OnExtendedPriceChanging(decimal value);
    partial void OnExtendedPriceChanged();
    partial void OnLastEditedByChanging(int value);
    partial void OnLastEditedByChanged();
    partial void OnLastEditedWhenChanging(System.DateTime value);
    partial void OnLastEditedWhenChanged();
    #endregion
		
		public InvoiceLines()
		{
			this._People = default(EntityRef<People>);
			this._Invoices = default(EntityRef<Invoices>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceLineID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceLineID
		{
			get
			{
				return this._InvoiceLineID;
			}
			set
			{
				if ((this._InvoiceLineID != value))
				{
					this.OnInvoiceLineIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceLineID = value;
					this.SendPropertyChanged("InvoiceLineID");
					this.OnInvoiceLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL")]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._Invoices.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockItemID", DbType="Int NOT NULL")]
		public int StockItemID
		{
			get
			{
				return this._StockItemID;
			}
			set
			{
				if ((this._StockItemID != value))
				{
					this.OnStockItemIDChanging(value);
					this.SendPropertyChanging();
					this._StockItemID = value;
					this.SendPropertyChanged("StockItemID");
					this.OnStockItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageTypeID", DbType="Int NOT NULL")]
		public int PackageTypeID
		{
			get
			{
				return this._PackageTypeID;
			}
			set
			{
				if ((this._PackageTypeID != value))
				{
					this.OnPackageTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PackageTypeID = value;
					this.SendPropertyChanged("PackageTypeID");
					this.OnPackageTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,3) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(18,2) NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineProfit", DbType="Decimal(18,2) NOT NULL")]
		public decimal LineProfit
		{
			get
			{
				return this._LineProfit;
			}
			set
			{
				if ((this._LineProfit != value))
				{
					this.OnLineProfitChanging(value);
					this.SendPropertyChanging();
					this._LineProfit = value;
					this.SendPropertyChanged("LineProfit");
					this.OnLineProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtendedPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal ExtendedPrice
		{
			get
			{
				return this._ExtendedPrice;
			}
			set
			{
				if ((this._ExtendedPrice != value))
				{
					this.OnExtendedPriceChanging(value);
					this.SendPropertyChanging();
					this._ExtendedPrice = value;
					this.SendPropertyChanged("ExtendedPrice");
					this.OnExtendedPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedBy", DbType="Int NOT NULL")]
		public int LastEditedBy
		{
			get
			{
				return this._LastEditedBy;
			}
			set
			{
				if ((this._LastEditedBy != value))
				{
					if (this._People.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastEditedByChanging(value);
					this.SendPropertyChanging();
					this._LastEditedBy = value;
					this.SendPropertyChanged("LastEditedBy");
					this.OnLastEditedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedWhen", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastEditedWhen
		{
			get
			{
				return this._LastEditedWhen;
			}
			set
			{
				if ((this._LastEditedWhen != value))
				{
					this.OnLastEditedWhenChanging(value);
					this.SendPropertyChanging();
					this._LastEditedWhen = value;
					this.SendPropertyChanged("LastEditedWhen");
					this.OnLastEditedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_InvoiceLines", Storage="_People", ThisKey="LastEditedBy", OtherKey="PersonID", IsForeignKey=true)]
		public People People
		{
			get
			{
				return this._People.Entity;
			}
			set
			{
				People previousValue = this._People.Entity;
				if (((previousValue != value) 
							|| (this._People.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People.Entity = null;
						previousValue.InvoiceLines.Remove(this);
					}
					this._People.Entity = value;
					if ((value != null))
					{
						value.InvoiceLines.Add(this);
						this._LastEditedBy = value.PersonID;
					}
					else
					{
						this._LastEditedBy = default(int);
					}
					this.SendPropertyChanged("People");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoices_InvoiceLines", Storage="_Invoices", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public Invoices Invoices
		{
			get
			{
				return this._Invoices.Entity;
			}
			set
			{
				Invoices previousValue = this._Invoices.Entity;
				if (((previousValue != value) 
							|| (this._Invoices.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoices.Entity = null;
						previousValue.InvoiceLines.Remove(this);
					}
					this._Invoices.Entity = value;
					if ((value != null))
					{
						value.InvoiceLines.Add(this);
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("Invoices");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.OrderLines")]
	public partial class OrderLines : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderLineID;
		
		private int _OrderID;
		
		private int _StockItemID;
		
		private string _Description;
		
		private int _PackageTypeID;
		
		private int _Quantity;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private decimal _TaxRate;
		
		private int _PickedQuantity;
		
		private System.Nullable<System.DateTime> _PickingCompletedWhen;
		
		private int _LastEditedBy;
		
		private System.DateTime _LastEditedWhen;
		
		private EntityRef<People> _People;
		
		private EntityRef<Order> _Orders;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderLineIDChanging(int value);
    partial void OnOrderLineIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnStockItemIDChanging(int value);
    partial void OnStockItemIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPackageTypeIDChanging(int value);
    partial void OnPackageTypeIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnPickedQuantityChanging(int value);
    partial void OnPickedQuantityChanged();
    partial void OnPickingCompletedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnPickingCompletedWhenChanged();
    partial void OnLastEditedByChanging(int value);
    partial void OnLastEditedByChanged();
    partial void OnLastEditedWhenChanging(System.DateTime value);
    partial void OnLastEditedWhenChanged();
    #endregion
		
		public OrderLines()
		{
			this._People = default(EntityRef<People>);
			this._Orders = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderLineID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderLineID
		{
			get
			{
				return this._OrderLineID;
			}
			set
			{
				if ((this._OrderLineID != value))
				{
					this.OnOrderLineIDChanging(value);
					this.SendPropertyChanging();
					this._OrderLineID = value;
					this.SendPropertyChanged("OrderLineID");
					this.OnOrderLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockItemID", DbType="Int NOT NULL")]
		public int StockItemID
		{
			get
			{
				return this._StockItemID;
			}
			set
			{
				if ((this._StockItemID != value))
				{
					this.OnStockItemIDChanging(value);
					this.SendPropertyChanging();
					this._StockItemID = value;
					this.SendPropertyChanged("StockItemID");
					this.OnStockItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageTypeID", DbType="Int NOT NULL")]
		public int PackageTypeID
		{
			get
			{
				return this._PackageTypeID;
			}
			set
			{
				if ((this._PackageTypeID != value))
				{
					this.OnPackageTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PackageTypeID = value;
					this.SendPropertyChanged("PackageTypeID");
					this.OnPackageTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,3) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickedQuantity", DbType="Int NOT NULL")]
		public int PickedQuantity
		{
			get
			{
				return this._PickedQuantity;
			}
			set
			{
				if ((this._PickedQuantity != value))
				{
					this.OnPickedQuantityChanging(value);
					this.SendPropertyChanging();
					this._PickedQuantity = value;
					this.SendPropertyChanged("PickedQuantity");
					this.OnPickedQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickingCompletedWhen", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PickingCompletedWhen
		{
			get
			{
				return this._PickingCompletedWhen;
			}
			set
			{
				if ((this._PickingCompletedWhen != value))
				{
					this.OnPickingCompletedWhenChanging(value);
					this.SendPropertyChanging();
					this._PickingCompletedWhen = value;
					this.SendPropertyChanged("PickingCompletedWhen");
					this.OnPickingCompletedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedBy", DbType="Int NOT NULL")]
		public int LastEditedBy
		{
			get
			{
				return this._LastEditedBy;
			}
			set
			{
				if ((this._LastEditedBy != value))
				{
					if (this._People.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastEditedByChanging(value);
					this.SendPropertyChanging();
					this._LastEditedBy = value;
					this.SendPropertyChanged("LastEditedBy");
					this.OnLastEditedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedWhen", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastEditedWhen
		{
			get
			{
				return this._LastEditedWhen;
			}
			set
			{
				if ((this._LastEditedWhen != value))
				{
					this.OnLastEditedWhenChanging(value);
					this.SendPropertyChanging();
					this._LastEditedWhen = value;
					this.SendPropertyChanged("LastEditedWhen");
					this.OnLastEditedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_OrderLines", Storage="_People", ThisKey="LastEditedBy", OtherKey="PersonID", IsForeignKey=true)]
		public People People
		{
			get
			{
				return this._People.Entity;
			}
			set
			{
				People previousValue = this._People.Entity;
				if (((previousValue != value) 
							|| (this._People.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People.Entity = null;
						previousValue.OrderLines.Remove(this);
					}
					this._People.Entity = value;
					if ((value != null))
					{
						value.OrderLines.Add(this);
						this._LastEditedBy = value.PersonID;
					}
					else
					{
						this._LastEditedBy = default(int);
					}
					this.SendPropertyChanged("People");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderLines", Storage="_Orders", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public Order Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Order previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.OrderLines.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.OrderLines.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private int _CustomerID;
		
		private int _SalespersonPersonID;
		
		private System.Nullable<int> _PickedByPersonID;
		
		private int _ContactPersonID;
		
		private System.Nullable<int> _BackorderOrderID;
		
		private System.DateTime _OrderDate;
		
		private System.DateTime _ExpectedDeliveryDate;
		
		private string _CustomerPurchaseOrderNumber;
		
		private bool _IsUndersupplyBackordered;
		
		private string _Comments;
		
		private string _DeliveryInstructions;
		
		private string _InternalComments;
		
		private System.Nullable<System.DateTime> _PickingCompletedWhen;
		
		private int _LastEditedBy;
		
		private System.DateTime _LastEditedWhen;
		
		private EntitySet<Invoices> _Invoices;
		
		private EntitySet<OrderLines> _OrderLines;
		
		private EntitySet<Order> _Orders2;
		
		private EntityRef<People> _People;
		
		private EntityRef<Order> _Orders1;
		
		private EntityRef<People> _People1;
		
		private EntityRef<People> _People2;
		
		private EntityRef<People> _People3;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnSalespersonPersonIDChanging(int value);
    partial void OnSalespersonPersonIDChanged();
    partial void OnPickedByPersonIDChanging(System.Nullable<int> value);
    partial void OnPickedByPersonIDChanged();
    partial void OnContactPersonIDChanging(int value);
    partial void OnContactPersonIDChanged();
    partial void OnBackorderOrderIDChanging(System.Nullable<int> value);
    partial void OnBackorderOrderIDChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnExpectedDeliveryDateChanging(System.DateTime value);
    partial void OnExpectedDeliveryDateChanged();
    partial void OnCustomerPurchaseOrderNumberChanging(string value);
    partial void OnCustomerPurchaseOrderNumberChanged();
    partial void OnIsUndersupplyBackorderedChanging(bool value);
    partial void OnIsUndersupplyBackorderedChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDeliveryInstructionsChanging(string value);
    partial void OnDeliveryInstructionsChanged();
    partial void OnInternalCommentsChanging(string value);
    partial void OnInternalCommentsChanged();
    partial void OnPickingCompletedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnPickingCompletedWhenChanged();
    partial void OnLastEditedByChanging(int value);
    partial void OnLastEditedByChanged();
    partial void OnLastEditedWhenChanging(System.DateTime value);
    partial void OnLastEditedWhenChanged();
    #endregion
		
		public Order()
		{
			this._Invoices = new EntitySet<Invoices>(new Action<Invoices>(this.attach_Invoices), new Action<Invoices>(this.detach_Invoices));
			this._OrderLines = new EntitySet<OrderLines>(new Action<OrderLines>(this.attach_OrderLines), new Action<OrderLines>(this.detach_OrderLines));
			this._Orders2 = new EntitySet<Order>(new Action<Order>(this.attach_Orders2), new Action<Order>(this.detach_Orders2));
			this._People = default(EntityRef<People>);
			this._Orders1 = default(EntityRef<Order>);
			this._People1 = default(EntityRef<People>);
			this._People2 = default(EntityRef<People>);
			this._People3 = default(EntityRef<People>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalespersonPersonID", DbType="Int NOT NULL")]
		public int SalespersonPersonID
		{
			get
			{
				return this._SalespersonPersonID;
			}
			set
			{
				if ((this._SalespersonPersonID != value))
				{
					if (this._People3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalespersonPersonIDChanging(value);
					this.SendPropertyChanging();
					this._SalespersonPersonID = value;
					this.SendPropertyChanged("SalespersonPersonID");
					this.OnSalespersonPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickedByPersonID", DbType="Int")]
		public System.Nullable<int> PickedByPersonID
		{
			get
			{
				return this._PickedByPersonID;
			}
			set
			{
				if ((this._PickedByPersonID != value))
				{
					if (this._People2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPickedByPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PickedByPersonID = value;
					this.SendPropertyChanged("PickedByPersonID");
					this.OnPickedByPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonID", DbType="Int NOT NULL")]
		public int ContactPersonID
		{
			get
			{
				return this._ContactPersonID;
			}
			set
			{
				if ((this._ContactPersonID != value))
				{
					if (this._People1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactPersonIDChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonID = value;
					this.SendPropertyChanged("ContactPersonID");
					this.OnContactPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackorderOrderID", DbType="Int")]
		public System.Nullable<int> BackorderOrderID
		{
			get
			{
				return this._BackorderOrderID;
			}
			set
			{
				if ((this._BackorderOrderID != value))
				{
					if (this._Orders1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBackorderOrderIDChanging(value);
					this.SendPropertyChanging();
					this._BackorderOrderID = value;
					this.SendPropertyChanged("BackorderOrderID");
					this.OnBackorderOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="Date NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedDeliveryDate", DbType="Date NOT NULL")]
		public System.DateTime ExpectedDeliveryDate
		{
			get
			{
				return this._ExpectedDeliveryDate;
			}
			set
			{
				if ((this._ExpectedDeliveryDate != value))
				{
					this.OnExpectedDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectedDeliveryDate = value;
					this.SendPropertyChanged("ExpectedDeliveryDate");
					this.OnExpectedDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPurchaseOrderNumber", DbType="NVarChar(20)")]
		public string CustomerPurchaseOrderNumber
		{
			get
			{
				return this._CustomerPurchaseOrderNumber;
			}
			set
			{
				if ((this._CustomerPurchaseOrderNumber != value))
				{
					this.OnCustomerPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerPurchaseOrderNumber = value;
					this.SendPropertyChanged("CustomerPurchaseOrderNumber");
					this.OnCustomerPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUndersupplyBackordered", DbType="Bit NOT NULL")]
		public bool IsUndersupplyBackordered
		{
			get
			{
				return this._IsUndersupplyBackordered;
			}
			set
			{
				if ((this._IsUndersupplyBackordered != value))
				{
					this.OnIsUndersupplyBackorderedChanging(value);
					this.SendPropertyChanging();
					this._IsUndersupplyBackordered = value;
					this.SendPropertyChanged("IsUndersupplyBackordered");
					this.OnIsUndersupplyBackorderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryInstructions", DbType="NVarChar(MAX)")]
		public string DeliveryInstructions
		{
			get
			{
				return this._DeliveryInstructions;
			}
			set
			{
				if ((this._DeliveryInstructions != value))
				{
					this.OnDeliveryInstructionsChanging(value);
					this.SendPropertyChanging();
					this._DeliveryInstructions = value;
					this.SendPropertyChanged("DeliveryInstructions");
					this.OnDeliveryInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalComments", DbType="NVarChar(MAX)")]
		public string InternalComments
		{
			get
			{
				return this._InternalComments;
			}
			set
			{
				if ((this._InternalComments != value))
				{
					this.OnInternalCommentsChanging(value);
					this.SendPropertyChanging();
					this._InternalComments = value;
					this.SendPropertyChanged("InternalComments");
					this.OnInternalCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickingCompletedWhen", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PickingCompletedWhen
		{
			get
			{
				return this._PickingCompletedWhen;
			}
			set
			{
				if ((this._PickingCompletedWhen != value))
				{
					this.OnPickingCompletedWhenChanging(value);
					this.SendPropertyChanging();
					this._PickingCompletedWhen = value;
					this.SendPropertyChanged("PickingCompletedWhen");
					this.OnPickingCompletedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedBy", DbType="Int NOT NULL")]
		public int LastEditedBy
		{
			get
			{
				return this._LastEditedBy;
			}
			set
			{
				if ((this._LastEditedBy != value))
				{
					if (this._People.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastEditedByChanging(value);
					this.SendPropertyChanging();
					this._LastEditedBy = value;
					this.SendPropertyChanged("LastEditedBy");
					this.OnLastEditedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedWhen", DbType="DateTime2 NOT NULL")]
		public System.DateTime LastEditedWhen
		{
			get
			{
				return this._LastEditedWhen;
			}
			set
			{
				if ((this._LastEditedWhen != value))
				{
					this.OnLastEditedWhenChanging(value);
					this.SendPropertyChanging();
					this._LastEditedWhen = value;
					this.SendPropertyChanged("LastEditedWhen");
					this.OnLastEditedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_Invoices", Storage="_Invoices", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<Invoices> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderLines", Storage="_OrderLines", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<OrderLines> OrderLines
		{
			get
			{
				return this._OrderLines;
			}
			set
			{
				this._OrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_Orders", Storage="_Orders2", ThisKey="OrderID", OtherKey="BackorderOrderID")]
		public EntitySet<Order> Orders2
		{
			get
			{
				return this._Orders2;
			}
			set
			{
				this._Orders2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Orders", Storage="_People", ThisKey="LastEditedBy", OtherKey="PersonID", IsForeignKey=true)]
		public People People
		{
			get
			{
				return this._People.Entity;
			}
			set
			{
				People previousValue = this._People.Entity;
				if (((previousValue != value) 
							|| (this._People.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._People.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._LastEditedBy = value.PersonID;
					}
					else
					{
						this._LastEditedBy = default(int);
					}
					this.SendPropertyChanged("People");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_Orders", Storage="_Orders1", ThisKey="BackorderOrderID", OtherKey="OrderID", IsForeignKey=true)]
		public Order Orders1
		{
			get
			{
				return this._Orders1.Entity;
			}
			set
			{
				Order previousValue = this._Orders1.Entity;
				if (((previousValue != value) 
							|| (this._Orders1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders1.Entity = null;
						previousValue.Orders2.Remove(this);
					}
					this._Orders1.Entity = value;
					if ((value != null))
					{
						value.Orders2.Add(this);
						this._BackorderOrderID = value.OrderID;
					}
					else
					{
						this._BackorderOrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Orders1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Orders1", Storage="_People1", ThisKey="ContactPersonID", OtherKey="PersonID", IsForeignKey=true)]
		public People People1
		{
			get
			{
				return this._People1.Entity;
			}
			set
			{
				People previousValue = this._People1.Entity;
				if (((previousValue != value) 
							|| (this._People1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People1.Entity = null;
						previousValue.Orders1.Remove(this);
					}
					this._People1.Entity = value;
					if ((value != null))
					{
						value.Orders1.Add(this);
						this._ContactPersonID = value.PersonID;
					}
					else
					{
						this._ContactPersonID = default(int);
					}
					this.SendPropertyChanged("People1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Orders2", Storage="_People2", ThisKey="PickedByPersonID", OtherKey="PersonID", IsForeignKey=true)]
		public People People2
		{
			get
			{
				return this._People2.Entity;
			}
			set
			{
				People previousValue = this._People2.Entity;
				if (((previousValue != value) 
							|| (this._People2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People2.Entity = null;
						previousValue.Orders2.Remove(this);
					}
					this._People2.Entity = value;
					if ((value != null))
					{
						value.Orders2.Add(this);
						this._PickedByPersonID = value.PersonID;
					}
					else
					{
						this._PickedByPersonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("People2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="People_Orders3", Storage="_People3", ThisKey="SalespersonPersonID", OtherKey="PersonID", IsForeignKey=true)]
		public People People3
		{
			get
			{
				return this._People3.Entity;
			}
			set
			{
				People previousValue = this._People3.Entity;
				if (((previousValue != value) 
							|| (this._People3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._People3.Entity = null;
						previousValue.Orders3.Remove(this);
					}
					this._People3.Entity = value;
					if ((value != null))
					{
						value.Orders3.Add(this);
						this._SalespersonPersonID = value.PersonID;
					}
					else
					{
						this._SalespersonPersonID = default(int);
					}
					this.SendPropertyChanged("People3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_Invoices(Invoices entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
		
		private void attach_OrderLines(OrderLines entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_OrderLines(OrderLines entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
		
		private void attach_Orders2(Order entity)
		{
			this.SendPropertyChanging();
			entity.Orders1 = this;
		}
		
		private void detach_Orders2(Order entity)
		{
			this.SendPropertyChanging();
			entity.Orders1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Website.NewCustomers")]
	public partial class NewCustomers
	{
		
		private int _CustomerID;
		
		private string _CustomerName;
		
		private string _CustomerCategoryName;
		
		private string _PrimaryContact;
		
		private string _AlternateContact;
		
		private string _PhoneNumber;
		
		private string _FaxNumber;
		
		private string _BuyingGroupName;
		
		private string _WebsiteURL;
		
		private string _DeliveryMethod;
		
		private string _CityName;
		
		private string _DeliveryRun;
		
		private string _RunPosition;
		
		public NewCustomers()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerCategoryName", DbType="NVarChar(50)")]
		public string CustomerCategoryName
		{
			get
			{
				return this._CustomerCategoryName;
			}
			set
			{
				if ((this._CustomerCategoryName != value))
				{
					this._CustomerCategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContact", DbType="NVarChar(50)")]
		public string PrimaryContact
		{
			get
			{
				return this._PrimaryContact;
			}
			set
			{
				if ((this._PrimaryContact != value))
				{
					this._PrimaryContact = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateContact", DbType="NVarChar(50)")]
		public string AlternateContact
		{
			get
			{
				return this._AlternateContact;
			}
			set
			{
				if ((this._AlternateContact != value))
				{
					this._AlternateContact = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this._FaxNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyingGroupName", DbType="NVarChar(50)")]
		public string BuyingGroupName
		{
			get
			{
				return this._BuyingGroupName;
			}
			set
			{
				if ((this._BuyingGroupName != value))
				{
					this._BuyingGroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebsiteURL", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string WebsiteURL
		{
			get
			{
				return this._WebsiteURL;
			}
			set
			{
				if ((this._WebsiteURL != value))
				{
					this._WebsiteURL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryMethod", DbType="NVarChar(50)")]
		public string DeliveryMethod
		{
			get
			{
				return this._DeliveryMethod;
			}
			set
			{
				if ((this._DeliveryMethod != value))
				{
					this._DeliveryMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(50)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this._CityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryRun", DbType="NVarChar(5)")]
		public string DeliveryRun
		{
			get
			{
				return this._DeliveryRun;
			}
			set
			{
				if ((this._DeliveryRun != value))
				{
					this._DeliveryRun = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunPosition", DbType="NVarChar(5)")]
		public string RunPosition
		{
			get
			{
				return this._RunPosition;
			}
			set
			{
				if ((this._RunPosition != value))
				{
					this._RunPosition = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
